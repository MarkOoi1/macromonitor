{"version":3,"sources":["../../../server/routes/api/theme.js"],"names":["express","require","router","Router","Theme","get","req","res","find","then","themes","length","status","json","msg","post","body","name","description","start_date","timeframe","user","markets","findOne","theme","err","newTheme","author","save","_id","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf,C,CAEA;;AACA,IAAMC,KAAK,GAAGH,OAAO,CAAC,oBAAD,CAArB,C,CAEA;AACA;AACA;;;AACAC,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC3BH,EAAAA,KAAK,CAACI,IAAN,GACOC,IADP,CACY,UAAAC,MAAM,EAAI;AACd,QAAGA,MAAM,CAACC,MAAP,IAAiB,CAApB,EAAuB,OAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAtB,CAAP;AACvBP,IAAAA,GAAG,CAACM,IAAJ,CAASH,MAAT;AACD,GAJP;AAKD,CAND,E,CAQA;AACA;AACA;;AACAR,MAAM,CAACa,IAAP,CAAY,GAAZ,EAAiB,UAACT,GAAD,EAAKC,GAAL,EAAa;AAAA,kBACwCD,GAAG,CAACU,IAD5C;AAAA,MACpBC,IADoB,aACpBA,IADoB;AAAA,MACdC,WADc,aACdA,WADc;AAAA,MACDC,UADC,aACDA,UADC;AAAA,MACWC,SADX,aACWA,SADX;AAAA,MACsBC,IADtB,aACsBA,IADtB;AAAA,MAC4BC,OAD5B,aAC4BA,OAD5B;;AAG5B,MAAG,CAACL,IAAD,IAAS,CAACC,WAAV,IAAyB,CAACE,SAA1B,IAAuC,CAACE,OAA3C,EAAoD;AAClD,WAAOf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;;AAEDV,EAAAA,KAAK,CAACmB,OAAN,CAAc;AAAEN,IAAAA,IAAI,EAAJA;AAAF,GAAd,EACCR,IADD,CACM,UAAAe,KAAK,EAAI;AACb,QAAGA,KAAH,EAAU,OAAOjB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAtB,CAAP;AACX,GAHD,WAIO,UAAAW,GAAG,EAAI;AACZ,WAAOlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAtB,CAAP;AACD,GAND;AAQA,MAAMY,QAAQ,GAAG,IAAItB,KAAJ,CAAU;AACzBa,IAAAA,IAAI,EAAJA,IADyB;AAEzBC,IAAAA,WAAW,EAAXA,WAFyB;AAGzBE,IAAAA,SAAS,EAATA,SAHyB;AAIzBD,IAAAA,UAAU,EAAVA,UAJyB;AAKzBQ,IAAAA,MAAM,EAAEN,IALiB;AAMzBC,IAAAA,OAAO,EAAPA;AANyB,GAAV,CAAjB;AASAI,EAAAA,QAAQ,CAACE,IAAT,GACGnB,IADH,CACQ,UAAAY,IAAI,EAAI;AACZd,IAAAA,GAAG,CAACM,IAAJ,CAAS;AACPgB,MAAAA,GAAG,EAAHA,GADO;AAEPZ,MAAAA,IAAI,EAAJA;AAFO,KAAT;AAID,GANH,WAOS,UAAAQ,GAAG;AAAA,WAAIlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB;AAACC,MAAAA,GAAG,EAAEW;AAAN,KAAtB,CAAJ;AAAA,GAPZ;AASD,CAjCD;AAmCAK,MAAM,CAACC,OAAP,GAAiB7B,MAAjB","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\n\r\n// Market Model\r\nconst Theme = require('../../models/Theme');\r\n\r\n// @route   GET api/theme\r\n// @desc    Get All Themes\r\n// @access  Public\r\nrouter.get('/', (req,res) => {\r\n  Theme.find()\r\n        .then(themes => {\r\n          if(themes.length == 0) return res.status(400).json( {msg: 'No themes found.'});\r\n          res.json(themes);\r\n        })\r\n});\r\n\r\n// @route   POST api/theme\r\n// @desc    Add New Theme\r\n// @access  Public\r\nrouter.post('/', (req,res) => {\r\n  const { name, description, start_date, timeframe, user, markets } = req.body;\r\n\r\n  if(!name && !description && !timeframe && !markets) {\r\n    return res.status(400).json({ msg: 'Please enter all fields'});\r\n  } \r\n  \r\n  Theme.findOne({ name })\r\n  .then(theme => {\r\n    if(theme) return res.status(400).json( {msg: 'Theme already exists'});\r\n  })\r\n  .catch(err => {\r\n    return res.status(400).json( {msg: 'Error searching for theme'})\r\n  });\r\n\r\n  const newTheme = new Theme({\r\n    name,\r\n    description,\r\n    timeframe,\r\n    start_date,\r\n    author: user,\r\n    markets\r\n  });\r\n\r\n  newTheme.save()\r\n    .then(user => {\r\n      res.json({\r\n        _id,\r\n        name\r\n      });\r\n    })\r\n    .catch(err => res.status(400).json( {msg: err}));\r\n\r\n});\r\n\r\nmodule.exports = router;"],"file":"theme.js"}