{"version":3,"sources":["../../../server/custom_modules/node-ig-api-interface/index.js"],"names":["util","require","ig","Market","markets","find","exec","items","then","arr","map","epic","forEach","val","index","igConnection","Promise","resolve","reject","initiateToken","res","login","r","console","log","inspect","accountType","e","err","subscriptionMode","fields","connectToLightstreamer","subscribeToLightstreamer","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,EAAE,GAAGD,OAAO,CAAC,eAAD,CAAlB,C,CAEA;;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,qBAAD,CAAtB;;AACA,IAAMG,OAAO,GAAGD,MAAM,CAACE,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAhB;AAEA,IAAIC,KAAK,GAAEH,OAAO,CAACI,IAAR,CAAa,UAAAC,GAAG,EAAI;AAC7BF,EAAAA,KAAK,GAAGE,GAAG,CAACC,GAAJ,CAAS;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAAT,CAAR;AACAJ,EAAAA,KAAK,CAACK,OAAN,CAAc,UAACC,GAAD,EAAKC,KAAL,EAAe;AAC3BP,IAAAA,KAAK,CAACO,KAAD,CAAL,mBAAwBD,GAAxB;AACD,GAFD;AAGA,SAAON,KAAP;AACD,CANU,CAAX;AAQA,IAAMQ,YAAY,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpDhB,EAAAA,EAAE,CAACiB,aAAH,GACCX,IADD,CACM,UAAAY,GAAG,EAAI;AACXlB,IAAAA,EAAE,CAACmB,KAAH,CAAS,IAAT,EACGb,IADH,CACQ,UAAAc,CAAC,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAACyB,OAAL,CAAaH,CAAC,CAACI,WAAf,EAA4B,KAA5B,EAAmC,IAAnC,CAAZ;AACAT,MAAAA,OAAO,CAACG,GAAD,CAAP;AACD,KAJH,WAKS,UAAAO,CAAC;AAAA,aAAIJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CAAJ;AAAA,KALV;AAOD,GATD,WAUO,UAAAC,GAAG,EAAI;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCI,GAAvC;AACAV,IAAAA,MAAM,CAACU,GAAD,CAAN;AACD,GAbD;AAcD,CAfoB,CAArB;AAiBAb,YAAY,CAACP,IAAb,CAAkB,UAAAY,GAAG,EAAI;AACrB;AACA,MAAIS,gBAAgB,GAAG,OAAvB,CAFqB,CAGrB;;AACA,MAAIC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,cAAtB,EAAsC,iBAAtC,EAAyD,kBAAzD,EAA6E,UAA7E,EAAyF,SAAzF,EAAoG,UAApG,EAAgH,UAAhH,EAA4H,SAA5H,EAAuI,WAAvI,EAAoJ,UAApJ,EAAgK,UAAhK,EAA4K,SAA5K,EAAuL,WAAvL,EAAoM,UAApM,EAAgN,UAAhN,EAA4N,SAA5N,EAAuO,WAAvO,EAAoP,UAApP,EAAgQ,iBAAhQ,CAAb;AAEA5B,EAAAA,EAAE,CAAC6B,sBAAH;AACA7B,EAAAA,EAAE,CAAC8B,wBAAH,CAA4BH,gBAA5B,EAA8CtB,KAA9C,EAAqDuB,MAArD,EAA6D,GAA7D;AACH,CARD;AAUAG,MAAM,CAACC,OAAP,GAAiBnB,YAAjB","sourcesContent":["const util = require('util');\r\n\r\nconst ig = require('./node-ig-api');\r\n\r\n// Price Model. Output array of EPICs mutated for the IG API\r\nconst Market = require('../../models/Market');\r\nconst markets = Market.find({}).exec();\r\n\r\nlet items =markets.then(arr => {\r\n  items = arr.map( ({ epic }) => epic);\r\n  items.forEach((val,index) => {\r\n    items[index] = `CHART:${val}:1MINUTE`;\r\n  })\r\n  return items\r\n});\r\n\r\nconst igConnection = new Promise((resolve, reject) => {\r\n  ig.initiateToken()\r\n  .then(res => {\r\n    ig.login(true)\r\n      .then(r => {\r\n        console.log(util.inspect(r.accountType, false, null));\r\n        resolve(res);\r\n      })\r\n      .catch(e => console.log(e));\r\n    \r\n  })\r\n  .catch(err => {\r\n    console.log(\"Error initiating token \", err);\r\n    reject(err);\r\n  })  \r\n}); \r\n\r\nigConnection.then(res => {\r\n    // Subscribe to real-time data\r\n    let subscriptionMode = 'MERGE'; \r\n    //let items = ['CHART:IX.D.ASX.IFT.IP:1MINUTE','CHART:CS.D.AUDUSD.MINI.IP:1MINUTE'];\r\n    let fields = ['LTV', 'TTV', 'UTM', 'DAY_OPEN_MID', 'DAY_NET_CHG_MID', 'DAY_PERC_CHG_MID', 'DAY_HIGH', 'DAY_LOW', 'OFR_OPEN', 'OFR_HIGH', 'OFR_LOW', 'OFR_CLOSE', 'BID_OPEN', 'BID_HIGH', 'BID_LOW', 'BID_CLOSE', 'LTP_OPEN', 'LTP_HIGH', 'LTP_LOW', 'LTP_CLOSE', 'CONS_END', 'CONS_TICK_COUNT'];\r\n    \r\n    ig.connectToLightstreamer();\r\n    ig.subscribeToLightstreamer(subscriptionMode, items, fields, 0.5);\r\n});\r\n\r\nmodule.exports = igConnection;\r\n\r\n"],"file":"index.js"}